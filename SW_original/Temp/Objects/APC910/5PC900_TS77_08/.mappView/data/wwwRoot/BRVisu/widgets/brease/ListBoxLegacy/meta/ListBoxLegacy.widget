<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.ListBoxLegacy">
		<ASEngineeringInfo>
			<IsProjectable>false</IsProjectable>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>brease/core/BaseWidget.js</File>
				<File>brease/decorators/LanguageDependency.js</File>
				<File>brease/decorators/VisibilityDependency.js</File>
				<File>brease/enum/Enum.js</File>
				<File>brease/core/Types.js</File>
				<File>brease/helper/Scroller.js</File>
				<File>brease/events/BreaseEvent.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/ListBoxLegacy/ListBoxLegacy.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Selector</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Liste von Texten</Description>
			<Description name="de">Zeigt eine Liste, aus welcher der Benutzer Elemente ausw√§hlen kann</Description>
			<Description name="en">Displays a list from where the user can select items</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.ListBoxLegacy</Class>
			<Class level="1">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="SetDataProvider">
				<Description>Sets dataProvider</Description>
				<Arguments>
					<Argument name="provider" type="ItemCollection" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetEnable">
				<Description>setter for binding of &apos;enable&apos;</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of &apos;enable&apos; (false = disabled, true = enabled)&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetSelectedIndex">
				<Description>Sets selectedIndex</Description>
				<Arguments>
					<Argument name="index" type="Integer" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetSelectedValue">
				<Description>Sets selectedValue</Description>
				<Arguments>
					<Argument name="value" type="String" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetStyle">
				<Arguments>
					<Argument name="value" type="StyleReference" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetVisible">
				<Description>Sets the visibility of the widget.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of visibility (false = hide, true = show)</Description>
					</Argument>
				</Arguments>
			</Method>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0">
						<Description>id of widget that triggered this event&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;enable&apos;.&lt;br/&gt;
Fired when enabled state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="SelectedIndexChanged">
				<Arguments>
					<Argument name="selectedIndex" type="Integer" index="0">
					</Argument>
					<Argument name="selectedValue" type="String" index="1">
						<Description>Fired when index changes.</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="VisibleChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;visible&apos;.&lt;br/&gt;
Fired when visible state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="dataProvider" type="ItemCollection" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>ItemCollection see Datatype
				</Description>
			</Property>
			<Property name="ellipsis" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, overflow of text is symbolized with an ellipsis. This option has no effect, if wordWrap = true.
				</Description>
			</Property>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.
				</Description>
			</Property>
			<Property name="fitHeight2Items" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, the height will fit to the necessary height if the height  oft the list is bigger
If false, the list uses the configured height
				</Description>
			</Property>
			<Property name="imageAlign" type="brease.enum.ImagePosition" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="left">
				<Description>Position of images relative to text
				</Description>
			</Property>
			<Property name="imagePath" type="DirectoryPath" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Path to the images location (e.g. &apos;Media/images/&apos;).
Names of the images must be given like the index in the dataProvider (e.g. 0.png, 1.png, 2.png)
				</Description>
			</Property>
			<Property name="itemHeight" type="Integer" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="40">
				<Description>Height of every item in the List
				</Description>
			</Property>
			<Property name="multiLine" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, more than one line is possible. Text will wrap when necessary (wordWrap=true) or at line breaks (\n).
If false, text will never wrap to the next line. The text continues on the same line.
				</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles
				</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles
				</Description>
			</Property>
			<Property name="selectedIndex" type="UInteger" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="0">
				<Description>Index of the selected item. The first item has index=0
				</Description>
			</Property>
			<Property name="selectedValue" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Value of the selected item
				</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type
				</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility
				</Description>
			</Property>
			<Property name="wordWrap" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, text will wrap when necessary.
				</Description>
			</Property>
		</Properties>
	<BindingTemplates>
  
</BindingTemplates>
<PropertyGroups>
  <PropertyGroup name="Size" type="String" category="Layout">
    <Description>outer height and width of widget</Description>
  </PropertyGroup>
  <PropertyGroup name="Position" type="String" category="Layout">
    <Description>top and left of widget</Description>
  </PropertyGroup>
</PropertyGroups>
<StyleProperties defaultStyle="default">
  <StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.brease.ListBoxLegacy" category="Layout" groupRefId="Size" groupOrder="1" default="150">
    <StyleElement attribute="@include elemWidth($value)"/>
    <Description>outer width of widget</Description>
  </StyleProperty>
  <StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.brease.ListBoxLegacy" category="Layout" groupRefId="Size" groupOrder="2" default="150">
    <StyleElement attribute="@include elemHeight($value)"/>
    <Description>outer height of widget</Description>
  </StyleProperty>
  <StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
    <StyleElement attribute="@include elemTop($value)"/>
    <Description>absolute position measured from top boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
    <StyleElement attribute="@include elemLeft($value)"/>
    <Description>absolute position measured from left boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
    <StyleElement attribute="z-index"/>
    <Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;&#xD;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;&#xD;
        The zIndex must be unique within a content.&lt;br/&gt;</Description>
  </StyleProperty>
  <StyleProperty name="listSeparatorColor" category="Appearance" type="Color" default="#000">
    <StyleElement selector="ul div" attribute="background"/>
    <Description>Sets the color of the list separator</Description>
  </StyleProperty>
  <StyleProperty name="borderWidth" category="Appearance" type="PixelValCollection" default="2px">
    <StyleElement attribute="border-width"/>
    <Description>Sets the width of the border. For further information, please see its type</Description>
  </StyleProperty>
  <StyleProperty name="borderStyle" category="Appearance" type="BorderStyle" default="solid">
    <StyleElement attribute="border-style"/>
    <Description>Sets the border style of the widget. For further information, please see its type</Description>
  </StyleProperty>
  <StyleProperty name="cornerRadius" category="Appearance" type="PixelValCollection" default="0px">
    <StyleElement attribute="@include border-radius($value)"/>
    <Description>Sets the radius of the widget rounded corners. For further information, please see its type</Description>
  </StyleProperty>
  <StyleProperty name="backColor" category="Appearance" type="Color" default="#FFF">
    <StyleElement selector="ul li" attribute="background-color"/>
    <Description>Sets the background color of the items not selected</Description>
  </StyleProperty>
  <StyleProperty name="backGroundGradient" category="Appearance" type="Gradient" default="none">
    <StyleElement selector="ul li" attribute="background-image"/>
    <Description>Sets the background color of the items not selected as a gradient</Description>
  </StyleProperty>
  <StyleProperty name="borderColor" category="Appearance" type="ColorCollection" default="#535353">
    <StyleElement attribute="border-color"/>
    <Description>Sets the border color of the widget</Description>
  </StyleProperty>
  <StyleProperty name="textColor" category="Appearance" type="Color" default="#535353">
    <StyleElement selector="li span" attribute="color"/>
    <Description>Sets the text color of the items not selected</Description>
  </StyleProperty>
  <StyleProperty name="activeBackColor" category="Appearance" type="Color" default="#ff8800">
    <StyleElement selector="ul li.selected" attribute="background-color"/>
    <Description>Sets the background color of the selected item</Description>
  </StyleProperty>
  <StyleProperty name="activeBackGroundGradient" category="Appearance" type="Gradient" default="none">
    <StyleElement selector="ul li.selected" attribute="background-image"/>
    <Description>Sets the background color of the selected item as a gradient</Description>
  </StyleProperty>
  <StyleProperty name="activeTextColor" category="Appearance" type="Color" default="#ffffff">
    <StyleElement selector="ul li.selected span" attribute="color"/>
    <Description>Sets the text color of the selected item</Description>
  </StyleProperty>
  <StyleProperty name="textAlign" category="Appearance" type="brease.enum.TextAlign" default="center">
    <StyleElement selector="ul li" attribute="@include text-alignment($value)"/>
    <Description>Alignment of the text</Description>
  </StyleProperty>
  <StyleProperty name="opacity" category="Appearance" type="Opacity" default="1">
    <StyleElement selector="" attribute="opacity"/>
    <Description>Opacity of the widget</Description>
  </StyleProperty>
  <StyleProperty name="fontSize" category="Font" type="PixelVal" default="12px">
    <StyleElement selector="ul li span" attribute="font-size"/>
    <Description>Fontsize of the text in pixel</Description>
  </StyleProperty>
  <StyleProperty name="fontName" category="Font" type="FontName" default="Arial">
    <StyleElement selector="ul li span" attribute="font-family"/>
    <Description>Fontname of the text</Description>
  </StyleProperty>
  <StyleProperty name="bold" category="Font" type="Boolean" default="true">
    <StyleElement selector="ul li span" attribute="@include font-weight-bold($value)"/>
    <Description>If **true** font style is bold</Description>
  </StyleProperty>
  <StyleProperty name="italic" category="Font" type="Boolean" default="false">
    <StyleElement selector="ul li span" attribute="@include font-style-italic($value)"/>
    <Description>If **true** font style is italic</Description>
  </StyleProperty>
  <StyleProperty name="margin" category="Layout" type="Margin" default="0px">
    <StyleElement attribute="margin"/>
    <Description>Margin of the Widget</Description>
  </StyleProperty>
</StyleProperties>
</Widget>
</WidgetLibrary>