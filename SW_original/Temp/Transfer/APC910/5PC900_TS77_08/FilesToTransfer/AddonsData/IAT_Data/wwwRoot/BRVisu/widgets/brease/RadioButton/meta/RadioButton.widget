<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.RadioButton">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>widgets/brease/ToggleButton/ToggleButton.js</File>
				<File>brease/enum/Enum.js</File>
				<File>brease/events/BreaseEvent.js</File>
				<File>brease/core/Types.js</File>
				<File>widgets/brease/common/libs/wfUtils/UtilsImage.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/RadioButton/RadioButton.js</Widget>
				<Widget>widgets/brease/ToggleButton/ToggleButton.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Buttons</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Optionsbutton</Description>
			<Description name="de">Ermöglicht es dem Benutzer, eine einzelne Option aus einer Gruppe von Optionen zu wählen, wenn diese mit anderen RadioButtons gepaart sind</Description>
			<Description name="en">Enables the user to select a single option from a group of choices when paired with other RadioButtons</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.RadioButton</Class>
			<Class level="1">widgets.brease.ToggleButton</Class>
			<Class level="2">widgets.brease.Button</Class>
			<Class level="3">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="RemoveMouseDownText">
				<Description>Remove mouseDownText.</Description>
			</Method>
			<Method name="RemoveText">
				<Description>Remove text.</Description>
			</Method>
			<Method name="SetEnable">
				<Description>setter for binding of &apos;enable&apos;</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of &apos;enable&apos; (false = disabled, true = enabled)&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetMouseDownImage">
				<Description>Sets the image when mouse down</Description>
				<Arguments>
					<Argument name="mouseDownImage" type="ImagePath" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetMouseDownText">
				<Description>Sets the visible text for pressed state. This method can remove an optional textkey.</Description>
				<Arguments>
					<Argument name="text" type="String" index="0">
					</Argument>
					<Argument name="keepKey" type="Boolean" index="1">
						<Description>Set true, if textkey should not be removed</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetStyle">
				<Arguments>
					<Argument name="value" type="StyleReference" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetText">
				<Description>Sets the visible text. This method can remove an optional textkey.</Description>
				<Arguments>
					<Argument name="text" type="String" index="0">
					</Argument>
					<Argument name="keepKey" type="Boolean" index="1">
						<Description>Set true, if textkey should not be removed</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetValue">
				<Description>Toggle button dependent of a value.&lt;br/&gt;
This method is used for binding.				</Description>
				<Arguments>
					<Argument name="value" type="Integer" index="0">
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetVisible">
				<Description>Sets the visibility of the widget.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>State of visibility (false = hide, true = show)&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Method>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
			</Event>
			<Event name="DoubleClick">
				<Description>Fired when element has double click.</Description>
			</Event>
			<Event name="EnableChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;enable&apos;.&lt;br/&gt;
Fired when enabled state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="MouseDown">
				<Description>Fired when widget enters mouseDown state</Description>
			</Event>
			<Event name="MouseUp">
				<Description>Fired when widget enters mouseUp state</Description>
			</Event>
			<Event name="ValueChanged">
				<Arguments>
					<Argument name="newValue" type="Number" index="0">
						<Description>Fired when the status of the widget is changed by user interaction</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="VisibleChanged">
				<Arguments>
					<Argument name="value" type="Boolean" index="0">
						<Description>value reflects state of property &apos;visible&apos;.&lt;br/&gt;
Fired when visible state changes.&lt;/p&gt;



						</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="boxSize" type="Integer" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="25">
				<Description>Size of the radiobutton symbol
				</Description>
			</Property>
			<Property name="breakWord" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>Allows lines to be broken within words if an otherwise unbreakable string is too long to fit.
				</Description>
			</Property>
			<Property name="checkedBoxImage" type="ImagePath" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Image of the box when the widget is checked.
				</Description>
			</Property>
			<Property name="disabledCheckedBoxImage" type="ImagePath" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Image of the box when the widget is checked and disabled.
				</Description>
			</Property>
			<Property name="disabledUncheckedBoxImage" type="ImagePath" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Image of the box when the widget is unchecked and disabled.
				</Description>
			</Property>
			<Property name="ellipsis" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, overflow of text is symbolized with an ellipsis. This option has no effect, if wordWrap = true.
				</Description>
			</Property>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.
				</Description>
			</Property>
			<Property name="imageAlign" type="brease.enum.ImageAlign" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="left">
				<Description>Position of image relative to text.
				</Description>
			</Property>
			<Property name="mouseDownText" type="String" initOnly="false" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Text which is displayed in the button when pressed
				</Description>
			</Property>
			<Property name="multiLine" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, more than one line is possible.&lt;br/&gt;
Text will wrap when necessary (if property wordWrap is set to true) or at explicit line breaks (\n).
If false, text will never wrap to the next line. The text continues on the same line.
				</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles
				</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles
				</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type
				</Description>
			</Property>
			<Property name="text" type="String" initOnly="false" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Text which is displayed in the button
				</Description>
			</Property>
			<Property name="uncheckedBoxImage" type="ImagePath" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Image of the box when the widget is unchecked.
				</Description>
			</Property>
			<Property name="value" type="Boolean" initOnly="false" localizable="false" editableBinding="true" readOnly="false" required="false" projectable="true" category="Data" defaultValue="false">
				<Description>Represents the boolean state of the element.
				</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility
				</Description>
			</Property>
			<Property name="wordWrap" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, text will wrap when necessary.&lt;br/&gt;
This property has no effect, if multiLine=false
				</Description>
			</Property>
		</Properties>
	<BindingTemplates>
  
</BindingTemplates>
<PropertyGroups>
  <PropertyGroup name="Size" type="String" category="Layout">
    <Description>outer height and width of widget</Description>
  </PropertyGroup>
  <PropertyGroup name="Position" type="String" category="Layout">
    <Description>top and left of widget</Description>
  </PropertyGroup>
</PropertyGroups>
<StyleProperties defaultStyle="default">
  <StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.brease.RadioButton" category="Layout" groupRefId="Size" groupOrder="1" default="150">
    <StyleElement attribute="@include elemWidth($value)"/>
    <Description>outer width of widget</Description>
  </StyleProperty>
  <StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.brease.RadioButton" category="Layout" groupRefId="Size" groupOrder="2" default="30">
    <StyleElement attribute="@include elemHeight($value)"/>
    <Description>outer height of widget</Description>
  </StyleProperty>
  <StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
    <StyleElement attribute="@include elemTop($value)"/>
    <Description>absolute position measured from top boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
    <StyleElement attribute="@include elemLeft($value)"/>
    <Description>absolute position measured from left boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
    <StyleElement attribute="z-index"/>
    <Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;&#xD;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;&#xD;
        The zIndex must be unique within a content.&lt;br/&gt;</Description>
  </StyleProperty>
  <StyleProperty name="imageWidth" type="Size" not_styleable="true" category="Appearance" default="0" hide="true" owner="widgets.brease.RadioButton">
    <Description>width of the image</Description>
  </StyleProperty>
  <StyleProperty name="imageHeight" type="Size" not_styleable="true" category="Appearance" default="0" hide="true" owner="widgets.brease.RadioButton">
    <Description>height of the image</Description>
  </StyleProperty>
  <StyleProperty name="imageColor" category="Appearance" type="Color" default="#000000" hide="true" owner="widgets.brease.RadioButton">
    <Description>Color of the image - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownImageColor" category="Appearance" type="Color" default="#000000" hide="true" owner="widgets.brease.RadioButton">
    <Description>Color of the image - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="disabledImageColor" category="Appearance" type="Color" default="#000000" hide="true" owner="widgets.brease.RadioButton">
    <Description>Color of the image - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="borderStyle" type="BorderStyle" category="Appearance" default="none" owner="widgets.brease.RadioButton">
    <StyleElement attribute="border-style"/>
    <Description>border style of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="borderWidth" type="PixelValCollection" category="Appearance" default="0px" owner="widgets.brease.RadioButton">
    <StyleElement attribute="border-width"/>
    <Description>borderWidth of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="cornerRadius" type="PixelValCollection" category="Appearance" default="0px" owner="widgets.brease.RadioButton">
    <StyleElement attribute="@include border-radius($value)"/>
    <Description>cornerRadius of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="backColor" category="Appearance" type="Color" default="transparent" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;:not(.disabled)" attribute="background-color"/>
    <Description>backColor of the Widget when enabled</Description>
  </StyleProperty>
  <StyleProperty name="disabledBackColor" category="Appearance" type="Color" default="#F1F1F1" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;.disabled" attribute="background-color"/>
    <StyleElement selector="&amp;.disabled.checked" attribute="background-color"/>
    <StyleElement selector="&amp;.disabled.active" attribute="background-color"/>
    <Description>backColor of the Widget when disabled</Description>
  </StyleProperty>
  <StyleProperty name="backGroundGradient" category="Appearance" type="Gradient" default="none">
    <StyleElement selector="&amp;:not(.disabled)" attribute="background-image"/>
    <Description>Background as a gradient</Description>
  </StyleProperty>
  <StyleProperty name="disabledBackGroundGradient" category="Appearance" type="Gradient" default="none">
    <StyleElement selector="&amp;.disabled" attribute="background-image"/>
    <StyleElement selector="&amp;.disabled.active" attribute="background-image"/>
    <StyleElement selector="&amp;.disabled.checked" attribute="background-image"/>
    <Description>Background as a gradient</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownBackGroundGradient" category="Appearance" type="Gradient" default="none">
    <StyleElement selector="&amp;.active:not(.disabled):not(.editMode)" attribute="background-image"/>
    <StyleElement selector="&amp;.checked:not(.disabled)" attribute="background-image"/>
    <Description>Background as a gradient when button is clicked</Description>
  </StyleProperty>
  <StyleProperty name="backGround" category="Appearance" type="ImagePath" default="">
    <StyleElement attribute="@include backGroundImage('../$value')"/>
    <Description>Sets the path for an image as background</Description>
  </StyleProperty>
  <StyleProperty name="borderColor" category="Appearance" type="ColorCollection" default="#5B7C70" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;:not(.disabled):not(.checked)" attribute="border-color"/>
    <Description>BorderColor of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="disabledBorderColor" category="Appearance" type="ColorCollection" default="#FFFFFF #C8C8C8 #C8C8C8 #FFFFFF" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;.disabled" attribute="border-color"/>
    <StyleElement selector="&amp;.disabled.checked" attribute="border-color"/>
    <StyleElement selector="&amp;.disabled.active" attribute="border-color"/>
    <Description>borderColor of the Widget when disabled (transparent, hex-code, text)</Description>
  </StyleProperty>
  <StyleProperty name="textColor" category="Appearance" type="Color" default="#333" owner="widgets.brease.RadioButton">
    <StyleElement selector="span" attribute="color"/>
    <Description>Sets the color of the displayed text</Description>
  </StyleProperty>
  <StyleProperty name="disabledTextColor" category="Appearance" type="Color" default="#989898" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;.disabled span" attribute="color"/>
    <StyleElement selector="&amp;.disabled.checked span" attribute="color"/>
    <StyleElement selector="&amp;.disabled.active span" attribute="color"/>
    <Description>text Color of the Widget when disabled</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownBorderColor" category="Appearance" type="ColorCollection" default="#FD7B01" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;.active:not(.disabled):not(.editMode)" attribute="border-color"/>
    <StyleElement selector="&amp;.checked:not(.disabled)" attribute="border-color"/>
    <Description>border color when button is pressed</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownBorderWidth" category="Appearance" type="PixelValCollection" default="2px" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;.active:not(.disabled):not(.editMode)" attribute="border-width"/>
    <StyleElement selector="&amp;.checked:not(.disabled)" attribute="border-width"/>
    <Description>border width when button is clicked</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownBackColor" category="Appearance" type="Color" default="transparent" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;.active:not(.disabled):not(.editMode)" attribute="background-color"/>
    <StyleElement selector="&amp;.checked:not(.disabled)" attribute="background-color"/>
    <Description>back color when button is pressed</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownTextColor" category="Appearance" type="Color" default="#000000" owner="widgets.brease.RadioButton">
    <StyleElement selector="&amp;.active:not(.disabled):not(.editMode) span" attribute="color"/>
    <StyleElement selector="&amp;.checked:not(.disabled) span" attribute="color"/>
    <Description>text color when button is clicked</Description>
  </StyleProperty>
  <StyleProperty name="textAlign" category="Appearance" type="brease.enum.TextAlign" default="left" owner="widgets.brease.RadioButton">
    <StyleElement selector="span" attribute="text-align"/>
    <Description>Alignment of the text</Description>
  </StyleProperty>
  <StyleProperty name="opacity" category="Appearance" type="Opacity" default="1" owner="widgets.brease.RadioButton">
    <StyleElement attribute="opacity"/>
    <Description>Opacity of the widget</Description>
  </StyleProperty>
  <StyleProperty name="rotation" category="Appearance" type="Rotation" default="0deg" owner="widgets.brease.RadioButton">
    <StyleElement attribute="@include rotate($value)"/>
    <Description>Rotation of widget.</Description>
  </StyleProperty>
  <StyleProperty name="fontSize" category="Font" type="PixelVal" default="12px" owner="widgets.brease.RadioButton">
    <StyleElement selector="span" attribute="font-size"/>
    <Description>Fontsize of the text in pixel</Description>
  </StyleProperty>
  <StyleProperty name="fontName" category="Font" type="FontName" default="Arial" owner="widgets.brease.RadioButton">
    <StyleElement selector="span" attribute="font-family"/>
    <Description>Fontname of the text</Description>
  </StyleProperty>
  <StyleProperty name="bold" category="Font" type="Boolean" default="true" owner="widgets.brease.RadioButton">
    <StyleElement selector="span" attribute="@include font-weight-bold($value)"/>
    <Description>If *true* font style is bold</Description>
  </StyleProperty>
  <StyleProperty name="italic" category="Font" type="Boolean" default="false" owner="widgets.brease.RadioButton">
    <StyleElement selector="span" attribute="@include font-style-italic($value)"/>
    <Description>If *true* font style is italic</Description>
  </StyleProperty>
  <StyleProperty name="padding" category="Layout" type="Padding" default="0px" owner="widgets.brease.RadioButton">
    <StyleElement attribute="padding"/>
    <Description>Padding of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="margin" category="Layout" type="Margin" default="0px">
    <StyleElement attribute="margin"/>
    <Description>Margin of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="shadow" type="Shadow" category="Appearance" default="none">
    <StyleElement attribute="@include box-shadow($value)"/>
    <StyleElement selector="&amp;.disabled.active" attribute="@include box-shadow($value)"/>
    <StyleElement selector="&amp;.disabled.checked" attribute="@include box-shadow($value)"/>
    <Description>Shadow of the Widget</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownShadow" type="Shadow" category="Appearance" default="0px" owner="widgets.brease.ToggleButton">
    <StyleElement selector="&amp;.active:not(.disabled):not(.editMode)" attribute="@include box-shadow($value)"/>
    <StyleElement selector="&amp;.checked" attribute="@include box-shadow($value)"/>
    <StyleElement selector="&amp;.disabled.checked" attribute="@include box-shadow($value)"/>
    <Description>Shadow of the Widget when button clicked</Description>
  </StyleProperty>
  <StyleProperty name="checkedBackColor" category="Appearance" type="Color" default="#DBDBDB" not_styleable="true" hide="true" owner="widgets.brease.RadioButton">
    <Description>back color when button is checked</Description>
  </StyleProperty>
  <StyleProperty name="checkedTextColor" category="Appearance" type="Color" default="#000000">
    <StyleElement selector="&amp;.checked:not(.disabled):not(.active) span" attribute="color"/>
    <Description>text color when button is checked</Description>
  </StyleProperty>
  <StyleProperty name="checkedImageColor" category="Appearance" type="Color" default="#000000" hide="true" owner="widgets.brease.RadioButton">
    <Description>Color of the image when the button is checked - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="disabledCheckedTextColor" category="Appearance" type="Color" default="#000000">
    <StyleElement selector="&amp;.disabled.checked:not(.active) span" attribute="color"/>
    <Description>text color when button is checked and disabled</Description>
  </StyleProperty>
  <StyleProperty name="disabledCheckedImageColor" category="Appearance" type="Color" default="#000000" hide="true" owner="widgets.brease.RadioButton">
    <Description>Color of the image when the button is checked - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="checkedBorderColor" category="Appearance" type="ColorCollection" default="#FD7B01" not_styleable="true" hide="true" owner="widgets.brease.RadioButton">
    <Description>border color when button is checked</Description>
  </StyleProperty>
  <StyleProperty name="disabledCheckedBackColor" category="Appearance" type="Color" default="#F1F1F1" not_styleable="true" hide="true" owner="widgets.brease.RadioButton">
    <Description>back color when button is checked and disabled</Description>
  </StyleProperty>
  <StyleProperty name="disabledCheckedBorderColor" category="Appearance" type="Color" default="#FFFFFF #C8C8C8 #C8C8C8 #FFFFFF" not_styleable="true" hide="true" owner="widgets.brease.RadioButton">
    <Description>border color when button is checked and disabled</Description>
  </StyleProperty>
  <StyleProperty name="checkedBackGroundGradient" category="Appearance" type="Color" default="none" not_styleable="true" hide="true" owner="widgets.brease.RadioButton">
    <Description>Background as a gradient</Description>
  </StyleProperty>
  <StyleProperty name="disabledCheckedBackGroundGradient" category="Appearance" type="Color" default="none" not_styleable="true" hide="true" owner="widgets.brease.RadioButton">
    <Description>Background as a gradient</Description>
  </StyleProperty>
  <StyleProperty name="foreColor" category="Appearance" type="Color" default="#FFF">
    <StyleElement selector="&amp;:not(.disabled) .radiobutton" attribute="background-color"/>
    <Description>Color of the RadioArea of the Widget when enabled</Description>
  </StyleProperty>
  <StyleProperty name="disabledForeColor" category="Appearance" type="Color" default="#FFF">
    <StyleElement selector="&amp;.disabled .radiobutton" attribute="background-color"/>
    <StyleElement selector="&amp;.disabled.checked .radiobutton" attribute="background-color"/>
    <StyleElement selector="&amp;.disabled.active .radiobutton" attribute="background-color"/>
    <Description>Color of the RadioArea of the Widget when disabled</Description>
  </StyleProperty>
  <StyleProperty name="mouseDownForeColor" category="Appearance" type="Color" default="#FFF">
    <StyleElement selector="&amp;.active:not(.disabled):not(.editMode) .radiobutton" attribute="background-color"/>
    <StyleElement selector="&amp;.checked:not(.disabled) .radiobutton" attribute="background-color"/>
    <Description>Color of the RadioArea of the Widget when mouse down</Description>
  </StyleProperty>
  <StyleProperty name="uncheckedBoxImageColor" category="Appearance" type="Color" default="#000000">
    <StyleElement selector="&amp;:not(.disabled):not(.checked) svg" attribute="fill"/>
    <Description>Color of the image box when is unchecked - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="checkedBoxImageColor" category="Appearance" type="Color" default="#000000">
    <StyleElement selector="&amp;.checked:not(.disabled) svg" attribute="fill"/>
    <Description>Color of the image box when is checked - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="disabledUncheckedBoxImageColor" category="Appearance" type="Color" default="#000000">
    <StyleElement selector="&amp;.disabled:not(.checked) svg" attribute="fill"/>
    <Description>Color of the image box when is unchecked and disabled - only apply if a SVG image is used</Description>
  </StyleProperty>
  <StyleProperty name="disabledCheckedBoxImageColor" category="Appearance" type="Color" default="#000000">
    <StyleElement selector="&amp;.checked.disabled svg" attribute="fill"/>
    <Description>Color of the image box when is checked and disabled - only apply if a SVG image is used</Description>
  </StyleProperty>
</StyleProperties>
</Widget>
</WidgetLibrary>